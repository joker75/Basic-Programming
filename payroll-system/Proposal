# Payroll System
Victor Nguyen

This payroll system allows the user to create objects of employees, managers, and
administrators. All of the employee, manager, and administrator classes inherit from another
class called Person. Therefore, there will be four total classes.
The Person class is an example of encapsulation since it includes an ID, a birthdate, the hourly
pay, the work hours, and the total pay. Additionally, there is a method that will return the total
pay by multiplying the work hours and the hourly pay.
The following classes are an example of inheritance since the employees, managers, and
administrators need the same data fields and methods from class. Additionally, each class has a
different perk that the user can input.

The employees class can keep track of overtime wage and overtime hours. Another
method will be used to return the overtime pay.

The managers class can keep track of bonuses and individual retirement accounts (IRA).

The administrators class can keep track of stock bonuses. There will be a HashMap that
can store the company name as the key and the profit as the value.

This payroll system will have exception handling. In other words, it will check for invalid input
and input mismatch by utilizing try/catch blocks. Additionally, there will be while loops and do-
while loops to allow the user to fix their input.
In regards to file operations, the user has the choice to save the data he or she inputted into
the system by writing out to a file. The output file will contain all of the objects that the user
has created. A static object counter will keep track of the number of objects created as well.
